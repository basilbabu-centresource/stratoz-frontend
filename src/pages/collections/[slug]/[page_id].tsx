import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import LayoutDefault from "../../../layout/Default";
import styles from "../../../../styles/Favorites.module.scss";
import ReactPaginate from "react-paginate";
import Router from "next/router";

const Collections: NextPage = ({ products, count, slug }: any) => {
  const handlePageChange = (pageNumber: number) => {
    Router.push(`/collections/${slug}/${pageNumber + 1}`);
  };

  return (
    <>
      <LayoutDefault>
        <div className={styles.container}>
          <Head>
            <title>Stratoz</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          {console.log("Count", Math.round(count / 9))}
          <main className={styles.main}>
            <div className={styles.title_desc}>
              <div className={"container " + styles.mb50}>
                <h2 className={styles.h2_title + " text-uppercase mt-5"}>
                  <span>{slug} </span>
                </h2>
                <hr />
              </div>
            </div>
            <div className={styles.products}>
              <div className="container">
                <div className="row">
                  {products.length === 0 && (
                    <h3 className="mb-5">
                      There are no products in this collections.
                    </h3>
                  )}
                  {products.map((product: any, index: number) => (
                    <>
                      <div className="col-md-4 mb-4" key={index}>
                        <a href={"/products/" + product.slug}>
                          {console.log(product)}
                          <div className={styles.col4fav}>
                            <div className={styles.fIcon}>
                              <img src="/icons/like.svg" />
                            </div>
                            <Image
                              alt="product_image"
                              src={
                                product.images[0]
                                  ? `${process.env.NEXT_PUBLIC_API_BASE_URL}${product.images[0].url}`
                                  : "/product2.png"
                              }
                              layout="responsive"
                              height="100%"
                              width="100%"
                              objectFit="cover"
                            />
                            <div className={styles.favDetails}>
                              <h4 className="mt-4">{product.title}</h4>
                              <h5>
                                {" "}
                                {product.code} - {product?.colour?.name}
                              </h5>
                            </div>
                          </div>
                        </a>
                      </div>
                    </>
                  ))}
                </div>
                {count > 9 && (
                  <ReactPaginate
                    previousLabel={"previous"}
                    nextLabel={"next"}
                    breakLabel={"..."}
                    breakClassName={"break-me"}
                    pageCount={Math.round(count / 9)}
                    marginPagesDisplayed={5}
                    pageRangeDisplayed={5}
                    onPageChange={(e: any) => handlePageChange(e.selected)}
                    containerClassName={"pagination"}
                    activeClassName={"active"}
                  />
                )}
              </div>
            </div>
          </main>
        </div>
      </LayoutDefault>
    </>
  );
};

// This gets called on every request
export async function getServerSideProps({ query }: any) {
  const pageId = query.page_id ? Number(query.page_id) : 1;

  const { slug } = query;

  // Fetch product list form API
  const productsRes = await fetch(
    `${process.env.API_BASE_URL}/products?collections.slug=${slug}&_start=${
      (pageId - 1) * 9
    }&_limit=9`
  );

  // // Fetch product count form API
  const countRes = await fetch(
    `${process.env.API_BASE_URL}/products/count?collections.slug=${slug}`
  );

  const products = await productsRes.json();

  console.log("Products", products);

  const count = await countRes.json();

  // Pass data to the page via props
  return { props: { products, count, slug } };
}

export default Collections;
