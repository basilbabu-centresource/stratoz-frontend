import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import LayoutDefault from "../../layout/Default";
import styles from "../../../styles/Brochures.module.scss";
import Hero from "../../components/Brochures/Hero";
import React, { Component, useState } from "react";

import { Document, Page, pdfjs } from "react-pdf";

import HTMLFlipBook from "react-pageflip";

pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;

const Brochures: NextPage = ({ brochure }: any) => {
  const settings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
  };

  const [numPages, setNumPages] = useState(null);

  const [pageNumber, setPageNumber] = useState(1);

  function onDocumentLoadSuccess(numPages: any) {
    setNumPages(numPages);
    console.log("num pages", numPages);
  }

  return (
    <>
      <LayoutDefault>
        <Hero />
        <div className="container">
          <Head>
            <title>Stratoz</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <main className={styles.main}>
            <div className={styles.title_desc}>
              <div className={"container " + styles.mb65}>
                <h2 className={styles.h2_title}>
                  <span>Brochures</span>
                </h2>

                {brochure.brochure.map((value: any, i: number) => (
                  <div className={"row " + styles.mb35} key={i}>
                    <div className="col-md-12">
                      <h5 className={styles.titleh5}>{value.title}</h5>

                      <div className="borde">
                        <Document
                          file={`${process.env.NEXT_PUBLIC_API_BASE_URL}${value.brochure[0]?.url}`}
                          onLoadSuccess={onDocumentLoadSuccess}
                          onLoadError={(error) => console.log("doc", error)}
                        >
                          {/* <div className="d-flex">
                          <Page pageNumber={pageNumber} />
                        </div> */}

                          <HTMLFlipBook
                            width={550}
                            height={550}
                            startPage={1}
                            size={"stretch"}
                            minWidth={315}
                            maxWidth={568}
                            minHeight={400}
                            autoSize={true}
                            maxHeight={1333}
                            maxShadowOpacity={0.5}
                            showCover={false}
                            drawShadow={false}
                            mobileScrollSupport={true}
                            onFlip={(e) => console.log(e)}
                            onChangeOrientation={(e) => console.log(e)}
                            onChangeState={(e) => console.log(e)}
                            className="demo-book"
                            style={{ height: "auto" }}
                            flippingTime={1000}
                            usePortrait={true}
                            swipeDistance={200}
                            showPageCorners={false}
                            disableFlipByClick={false}
                            useMouseEvents={true}
                            clickEventForward={true}
                            startZIndex={2}
                            // ref={(el) => (this.flipBook = el)}
                          >
                            {[...Array(10)].map((e, i) => (
                              <div key={i} className="demoPage border">
                                <Page pageNumber={pageNumber + i + 1} />
                              </div>
                            ))}
                          </HTMLFlipBook>
                        </Document>
                      </div>

                      <div className="row">
                        <div className={"col-md-6 col-6 " + styles.mt25}>
                          <a
                            href={`${process.env.NEXT_PUBLIC_API_BASE_URL}${value.brochure[0]?.url}`}
                          >
                            <button className={styles.broBtn}>
                              <img src="/icons/download.png" />
                              Download
                            </button>
                          </a>
                        </div>

                        {/* <div
                          className={
                            "col-md-6 col-6 text-end " +
                            styles.mt25 +
                            " " +
                            styles.slideBtn
                          }
                        >
                          <button onClick={() => setPageNumber(pageNumber - 1)}>
                            <img src="/icons/left.png" />
                          </button>
                          <button onClick={() => setPageNumber(pageNumber + 1)}>
                            <img src="/icons/right.png" />
                          </button>
                        </div> */}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </main>
        </div>
      </LayoutDefault>
    </>
  );
};

export async function getStaticProps() {
  // Fetch all categories form API
  const brochures = await fetch(`${process.env.API_BASE_URL}/brochures`);

  const brochure = await brochures.json();

  return {
    props: { brochure },
    revalidate: 1,
  };
}

export default Brochures;
