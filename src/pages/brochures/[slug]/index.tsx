import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import LayoutDefault from "../../../layout/Default";
import styles from "../../../../styles/Brochures.module.scss";
import ReactHtmlParser from 'react-html-parser';
import hStyle from "../../../components/Brochures/Hero/Hero.module.scss";
import Hero from "../../../components/Brochures/Hero";

import React, { Component, useState } from "react";

import { Document, Page, pdfjs } from "react-pdf";

import HTMLFlipBook from "react-pageflip";

pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;

const Brochure: NextPage = ({ catalogue, slug }: any) => {
  const settings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
  };

  const [numPages, setNumPages] = useState(null);

  const [pageNumber, setPageNumber] = useState(1);

  function onDocumentLoadSuccess(numPages: any) {
    setNumPages(numPages);
  }

  let base= process.env.NEXT_PUBLIC_API_BASE_URL;

  console.log(catalogue);
  
  
  return (
    <>
      <LayoutDefault>
        <Hero />
        <div className="container">
          <Head>
            <title>Stratoz</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <main className={styles.main}>
            <div className={styles.title_desc}>
              <div className={"container " + styles.mb65}>
                <h2 className={styles.h2_title}>
                  <span>Brochures</span>
                </h2>
                {/* <div className={"row " + styles.mb35} key={1}>
                  <div className="col-md-12">
                    <h5 className={styles.titleh5}>
                      {brochure.brochure[2].title}
                    </h5>
                    <div className="border">
                      <Document
                        file={`${process.env.NEXT_PUBLIC_API_BASE_URL}${brochure.brochure[2].brochure[0]?.url}`}
                        onLoadSuccess={onDocumentLoadSuccess}
                        onLoadError={(error) => console.log("doc", error)}
                      >
                        <HTMLFlipBook
                          width={550}
                          height={1150}
                          startPage={1}
                          size={"stretch"}
                          minWidth={315}
                          maxWidth={568}
                          minHeight={400}
                          autoSize={false}
                          maxHeight={1333}
                          maxShadowOpacity={0.5}
                          showCover={false}
                          drawShadow={false}
                          mobileScrollSupport={true}
                          onFlip={(e) => console.log(e)}
                          onChangeOrientation={(e) => console.log(e)}
                          onChangeState={(e) => console.log(e)}
                          className="demo-book"
                          style={{ height: "auto" }}
                          flippingTime={1000}
                          usePortrait={true}
                          swipeDistance={200}
                          showPageCorners={false}
                          disableFlipByClick={false}
                          useMouseEvents={true}
                          clickEventForward={true}
                          startZIndex={2}
                          // ref={(el) => (this.flipBook = el)}
                        >
                          {[...Array(10)].map((e, i) => (
                            <div key={i} className="demoPage">
                              <Page pageNumber={pageNumber + i + 1} />
                            </div>
                          ))}
                        </HTMLFlipBook>
                      </Document>
                    </div>
                    <div className="row">
                      <div className={"col-md-6 col-6 " + styles.mt25}>
                        <a
                          href={`${process.env.NEXT_PUBLIC_API_BASE_URL}${brochure.brochure[2].brochure[0]?.url}`}
                        >
                          <button className={styles.broBtn}>
                            <img src="/icons/download.png" />
                            Download
                          </button>
                        </a>
                      </div>
                    </div>
                  </div>
                </div> */}
                {/* <div className={"row " + styles.mb35} key={1}>
                  <div className="col-md-12">
                    <h5 className={styles.titleh5}>
                      {brochure.brochure[0].title}
                    </h5>
                    <div className={"borde " +styles.border}>
                      <Document
                        file={`${process.env.NEXT_PUBLIC_API_BASE_URL}${brochure.brochure[0].brochure[0]?.url}`}
                        onLoadSuccess={onDocumentLoadSuccess}
                        onLoadError={(error) => console.log("doc", error)}
                      >
                        <HTMLFlipBook
                          width={300}
                          height={395}
                          startPage={1}
                          size={"stretch"}
                          minWidth={315}
                          maxWidth={568}
                          minHeight={400}
                          autoSize={true}
                          maxHeight={1333}
                          maxShadowOpacity={0.5}
                          showCover={false}
                          drawShadow={false}
                          mobileScrollSupport={true}
                          onFlip={(e) => console.log(e)}
                          onChangeOrientation={(e) => console.log(e)}
                          onChangeState={(e) => console.log(e)}
                          className="demo-book"
                          style={{ height: "auto" }}
                          flippingTime={1000}
                          usePortrait={true}
                          swipeDistance={200}
                          showPageCorners={false}
                          disableFlipByClick={false}
                          useMouseEvents={true}
                          clickEventForward={true}
                          startZIndex={2}
                          // ref={(el) => (this.flipBook = el)}
                        >
                          {[...Array(10)].map((e, i) => (
                            <div key={i} className="demoPage bordr">
                              <Page pageNumber={pageNumber + i + 1} />
                            </div>
                          ))}
                        </HTMLFlipBook>
                      </Document>
                    </div>
                    <div className="row">
                      <div className={"col-md-6 col-6 " + styles.mt25}>
                        <a
                          href={`${process.env.NEXT_PUBLIC_API_BASE_URL}${brochure.brochure[0].brochure[0]?.url}`}
                        >
                          <button className={styles.broBtn}>
                            <img src="/icons/download.png" />
                            Download
                          </button>
                        </a>
                      </div>
                    </div>
                  </div>
                </div> */}
                <div className={"row " + styles.mb35} key={1}>
                  <div className="col-md-12">
                    <h5 className={styles.titleh5}>
                      {catalogue.title}
                    </h5>
                    <div id="flip-book" className={"d-none d-md-flex borde " +styles.border}>
                      <Document
                        file={`${process.env.NEXT_PUBLIC_API_BASE_URL}${catalogue.file?.url}`}
                        onLoadSuccess={onDocumentLoadSuccess}
                        onLoadError={(error) => console.log("doc", error)}
                      >
                        <HTMLFlipBook
                          width={300}
                          height={395}
                          startPage={1}
                          size={"stretch"}
                          minWidth={315}
                          maxWidth={568}
                          minHeight={400}
                          autoSize={true}
                          maxHeight={1333}
                          maxShadowOpacity={0.5}
                          showCover={false}
                          drawShadow={false}
                          mobileScrollSupport={true}
                          onFlip={(e) => console.log(e)}
                          onChangeOrientation={(e) => console.log(e)}
                          onChangeState={(e) => console.log(e)}
                          className="demo-book"
                          style={{ height: "auto" }}
                          flippingTime={1000}
                          usePortrait={true}
                          swipeDistance={200}
                          showPageCorners={false}
                          disableFlipByClick={false}
                          useMouseEvents={true}
                          clickEventForward={true}
                          startZIndex={2}
                          // ref={(el) => (this.flipBook = el)}
                        >
                          {[...Array(10)].map((e, i) => (
                            <div key={i} className="demoPage">
                              <Page pageNumber={pageNumber + i + 1} />
                            </div>
                          ))}
                        </HTMLFlipBook>
                      </Document>
                    </div>
                  </div>
                </div>
                <div className="row">
                  <div className={"col-md-6 col-6 mt-4" }>
                    <a
                      href={`${process.env.NEXT_PUBLIC_API_BASE_URL}${catalogue.file?.url}`}
                    >
                      <button className={styles.broBtn}>
                        <img src="/icons/download.png" />
                        Download 
                      </button>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </main>
        </div>
      </LayoutDefault>
    </>
  );
};

export async function getServerSideProps({ query }: any) {
  // Fetch product list form API
  const catalogues = await fetch(
    `${process.env.API_BASE_URL}/catalogues/${query.slug}/`
  );

  const catalogue = await catalogues.json();

  // Pass data to the page via props
  return { props: { catalogue, slug: query.slug } };
}

export default Brochure;
